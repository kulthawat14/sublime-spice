# Leandro Sehnem Heck (leoheck@gmail.com)

# Use F7 to convert this .YAML-tmlanguage to sublime .tmLanguage (property list) files

# Sublime text documentation:
# http://docs.sublimetext.info/en/latest/extensibility/syntaxdefs.html

# Sublime text (textmate) scopes (syntax colors):
# http://stackoverflow.com/questions/10834765/where-to-find-a-list-of-scopes-for-sublime2-or-textmate
# http://manual.macromates.com/en/language_grammars


# EXEMPLO BOM, OLHAR
# https://github.com/SublimeText/AAAPackageDev/blob/master/Syntax%20Definitions/Sublime%20Text%20Syntax%20Def%20(YAML).YAML-tmLanguage

---
name: SPICE
scopeName: source.sp
fileTypes: [sp, cdl, mdl, cir, mod, scs, spi]
uuid: b46f7485-a428-48e8-a1f8-05e3afb64e0a

# EXAMPLE: https://manual.macromates.com/en/language_grammars#naming_conventions
#  {  scopeName = 'source.untitled';
#     fileTypes = ( );
#     foldingStartMarker = '\{\s*$';
#     foldingStopMarker = '^\s*\}';
#     patterns = (
#        {  name = 'keyword.control.untitled';
#           match = '\b(if|while|for|return)\b';
#        },
#        {  name = 'string.quoted.double.untitled';
#           begin = '"';
#           end = '"';
#           patterns = (
#              {  name = 'constant.character.escape.untitled';
#                 match = '\\.';
#              }
#           );
#        },
#     );
#  }


patterns:

# Case insensitive regexp: ?i

# General comments
- match: ^[ \t]*\*.*
  name: comment.line.character.sp
  comment: Comments.

# SPECTRE/HSPICE comments
- match: ^[ \t]*//.*
  name: comment.line.character.sp
  comment: Voltage and current sources.


#==============================================================================
# Quotes
- begin: \'
  end: \'
  name: string.quoted.single.sp
  comment: Single quotes.

- begin: \"
  end: \"
  name: string.quoted.double.sp
  comment: Double quotes.


#==============================================================================
# Keywords

# General SPICE (sorted in reverse order to avoid shaddow commands)

- match: ([\.]?(?i:tran|to|tf|temp|subckt|statistics|simulator|set|sens|section|process|probe|print|plot|parameters|param|option|op|noise|model|measure|meas|lib|let|include|ic|from|four|disto|dc|control|alter|ac))[^a-zA-Z0-9_]
  captures:
    '1': {name: keyword.operator.sp}
  comment: SPECTRE specific commands

- match: ^[ \t]*([\.]?(?i:endsection|ends|endl|endc|end))([^a-zA-Z0-9_]|$)
  captures:
    '1': {name: keyword.operator.sp}
  comment: SPECTRE specific commands

# SPICEOPUS specific
- match: ^[ \t]*[.]?(?i:destroy|plot)[^a-zA-Z0-9_]
  name: keyword.control.sp
  comment: SPICEOPUS commands.

# HSPICE specific
# - match:
  # name: keyword.control.sp
  # comment: HSPICE specific commands.

# SPECTRE specific
# - match:
  # name: keyword.control.sp
  # comment: SPECTRE specific commands.


#==============================================================================
# Parameters

- match: ((?i:when|trig|tran|targ|find|deriv))[^a-zA-Z0-9_]
  captures:
    '0': {name: keyword.operator.sp}
  comment: command parameters

#==============================================================================
# Optional parameters

- match: ([a-zA-Z0-9_]+)[ \t]*=
  captures:
    '1': {name: constant.character.sp}
  comment: Waveform functions


#==============================================================================
# Built-in Functions

- match: ((?i:dc|pulse|pwl))[^a-zA-Z0-9_]
  captures:
    '1': {name: constant.character.sp}
  comment: Waveform functions

- match: ((?i:sin|cos|tan|asin|acos|atan|sinh|cosh|tanh|abs|sqrt|pow|pwr|log|log10|exp|db|int|sgn|sign|min|max|lx|i))[^a-zA-Z0-9_]
  captures:
    '1': {name: constant.character.sp}
  comment: Liberty parameters.

# TESTE PARA VER SE CONSIGO MELHORAR ISSO
- match: ((lv|v|i))[\s]*(\()[\s]*([a-zA-Z0-9 ]+)[\s]*(\))
  captures:
    '1': {name: 'constant.character.sp'}
    # '2': {name: 'constant.character.sp'}
    # '4': {name: 'constant.character.sp'}
  comment: TESTANDO.

#==============================================================================
# Devices

- match: ^[ \t]*(?i:v|i|e|g|h|f)[a-zA-Z0-9_@]+
  name: entity.name.tag.sp
  comment: Voltage and current sources.

- match: ^[ \t]*(?i:m|r|c|l|k|s|w)[a-zA-Z0-9_@]+
  name: support.type.sp
  comment: Built-in devices.

- match: ^[ \t]*(?i:x)[a-zA-Z0-9_@]+
  name: entity.sp
  comment: Sub circuits.


#==============================================================================
# Break lines

- match: ^[ \t]*\+
  name: string.quoted.single.sp
  comment: Break line symbol at begin of line

# I don't know if SPICE handle this constructs
- match: \+[ \t]$
  name: string.quoted.single.sp
  comment: At end of line


























